[{"path":"https://christinehou11.github.io/HuBMAPR/articles/hubmapr_vignettes.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Explore Human BioMolecular Atlas Program Data Portal","text":"‘HuBMAP’ data portal (https://portal.hubmapconsortium.org/) provides open, global bio-molecular atlas human body cellular level. HuBMAPR package provides alternative interface access data exploration file retrieval.","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/articles/hubmapr_vignettes.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Explore Human BioMolecular Atlas Program Data Portal","text":"HuBMAPR R package available Bioconductor version 3.19 later. can install HuBMAPR using following commands R session Bioconductor: Additionally, can install development version GitHub:","code":"if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"HuBMAPR\")  ## Check Bioconductor installation BiocManager::valid() BiocManager::install(\"christinehou11/HuBMAPR\")"},{"path":[]},{"path":"https://christinehou11.github.io/HuBMAPR/articles/hubmapr_vignettes.html","id":"load-necessary-packages","dir":"Articles","previous_headings":"Basic User Guide","what":"Load Necessary Packages","title":"Explore Human BioMolecular Atlas Program Data Portal","text":"Install additional required packages running package codes. Load additional packages. dplyr package widely used vignettes conduct data wrangling specific information extraction.","code":"library(dplyr) library(tidyr) library(HuBMAPR)"},{"path":"https://christinehou11.github.io/HuBMAPR/articles/hubmapr_vignettes.html","id":"data-discovery","dir":"Articles","previous_headings":"Basic User Guide","what":"Data Discovery","title":"Explore Human BioMolecular Atlas Program Data Portal","text":"HuBMAP data portal page displays five categories entity data, Dataset, Sample, Donor, Publication, Collection, chronologically (last modified date time). can choose explore arbitrary size data starting random location. default, can page less 10000 data one time using size numeric parameters. read next pages, change values. Using corresponding functions explore entity data. default tibble produced corresponding entity function reflects selected information. see names selected information, use following commands entity category. Specify parameter display information format \"character\" \"tibble\". samples_default_columns(), donors_default_columns(), collections_default_columns(), publications_default_columns() work . brief overview selected information five entity categories : Use organ() read available organs included HuBMAP. can helpful filter retrieved data based organ information. Data wrangling filter welcome retrieve data based interested information. dataset, sample, donor, collection, publication special HuBMAP ID UUID, UUID main ID used functions specific detail retrievals. Since datasets(), samples(), donors(), collections(), publications() returned selected information, can use *_detail() retrieve available information entry entity category given UUID. Use select() unnest_*() functions expand list-columns. sample_detail(uuid), donor_detail(uuid), collection_detail(uuid), publication_detail(uuid) work . Sample Donor derived samples datasets. HuBAMPR package, sample_derived() donor_derived() functions available use see derived datasets samples one sample given sample UUID one donor given donor UUID. Specify entity_type parameter retrieve derived Dataset Sample. donor_derived(uuid) works . retrieved tibbles using samples() donors(), one column named donor.hubmap_id. can help join tibble donors() tibbles datasets() samples(). retrieved tibbles donor_derived(uuid, entity_type = \"Dataset\") donor_derived(uuid, entity_type = \"Sample\"). Note: Donor entity, left_join() donor_derived() produce results derived datasets derived samples. Sample entity, left_join() sample_derived() produce results derived datasets. samples derived another sample derived one donor. Therefore, may see results sample_derived(uuid, entity_type = \"Sample\"). Example shows . collection related datasets, use collection_datasets() retrieve. publication related datasets, samples, donors, use publication_data() see, specifying entity_type parameter retrieve derived Dataset Sample","code":"# Retrieve the first 200 datasets datasets_sub <- datasets(size = 200, from = 0) datasets_sub #> # A tibble: 200 × 13 #>    uuid              hubmap_id registered_by dataset_processing_c…¹ dataset_type #>    <chr>             <chr>     <chr>         <chr>                  <chr>        #>  1 bbbf5a5b29986dd5… HBM664.N… HuBMAP Proce… HuBMAP Process         Histology [… #>  2 db0d7736f53dcf9b… HBM762.L… HuBMAP Proce… HuBMAP Process         Histology [… #>  3 7ae50cd47b3d2291… HBM769.Q… HuBMAP Proce… HuBMAP Process         Histology [… #>  4 77e7f69bbda6a376… HBM258.X… HuBMAP Proce… HuBMAP Process         Histology [… #>  5 1a3cf1aacd2e8ff6… HBM592.T… HuBMAP Proce… HuBMAP Process         Histology [… #>  6 6c9bdbe57fc29b2f… HBM684.P… HuBMAP Proce… HuBMAP Process         Histology [… #>  7 baf976734dd65220… HBM468.M… HuBMAP Proce… Raw                    Histology    #>  8 57b475b8ad39fa2c… HBM579.L… HuBMAP Proce… Raw                    Histology    #>  9 856aa4e05b68a784… HBM433.H… HuBMAP Proce… Raw                    Histology    #> 10 75fbf3b4452190bc… HBM727.S… HuBMAP Proce… HuBMAP Process         Histology [… #> # ℹ 190 more rows #> # ℹ abbreviated name: ¹​dataset_processing_category #> # ℹ 8 more variables: donor.hubmap_id <chr>, group_name <chr>, #> #   last_modified_timestamp <chr>, sample_category <chr>, status <chr>, #> #   analyte_class <chr>, data_types <chr>, organ <chr>  # Retrieve 200 samples from the 30th sample arranged chronologically samples_sub <- samples(size = 200, from = 10) samples_sub #> # A tibble: 200 × 7 #>    uuid              hubmap_id donor.hubmap_id group_name last_modified_timest…¹ #>    <chr>             <chr>     <chr>           <chr>      <chr>                  #>  1 e4ffe5a1de1e63b3… HBM867.F… HBM568.HLJW.252 Universit… 2024-05-29             #>  2 681f7f1d0a87427c… HBM788.K… HBM984.MHHN.738 Universit… 2024-05-29             #>  3 a6acb120173be820… HBM786.T… HBM662.VVHK.499 Universit… 2024-05-29             #>  4 0ec930e0f4a8fcf1… HBM752.D… HBM994.SGLP.263 Universit… 2024-05-29             #>  5 acb712bf26d8fe7d… HBM748.G… HBM735.QDFT.264 Universit… 2024-05-29             #>  6 c18dbe465fe2dfdd… HBM735.Q… HBM894.PKMC.242 Universit… 2024-05-29             #>  7 5abbecf8d13b9df7… HBM562.L… HBM256.BRQS.425 Universit… 2024-05-29             #>  8 8d7ce3aab7013e41… HBM556.C… HBM867.BLQJ.787 Universit… 2024-05-29             #>  9 c4200fa2bd88eca8… HBM486.Q… HBM984.MHHN.738 Universit… 2024-05-29             #> 10 c15e6342d6905d6d… HBM548.T… HBM579.CTRK.363 Universit… 2024-05-29             #> # ℹ 190 more rows #> # ℹ abbreviated name: ¹​last_modified_timestamp #> # ℹ 2 more variables: sample_category <chr>, organ <chr>  # Retrieve full datasets <- datasets() samples <- samples()  donors <- donors() donors #> # A tibble: 228 × 8 #>    uuid      hubmap_id group_name Sex   Age   Race  last_modified_timest…¹ BMI   #>    <chr>     <chr>     <chr>      <chr> <chr> <chr> <chr>                  <chr> #>  1 c09f8755… HBM534.P… TTD - Uni… Fema… 90    White 2024-04-03             NA    #>  2 0abacde2… HBM358.K… TTD - Uni… Male  90    White 2024-04-03             NA    #>  3 d7c90f1f… HBM639.M… TTD - Uni… Fema… 59    White 2024-04-03             NA    #>  4 b1acd173… HBM674.F… TTD - Uni… Fema… 60    White 2024-04-03             NA    #>  5 24e69464… HBM379.B… TTD - Uni… Male  79    White 2024-04-03             NA    #>  6 c9c39035… HBM543.J… TTD - Uni… Male  71    White 2024-04-03             NA    #>  7 f079501e… HBM448.V… TTD - Uni… Fema… 82    White 2024-04-03             NA    #>  8 03b62365… HBM263.S… TTD - Uni… Fema… 75    White 2024-04-03             NA    #>  9 a0bea4ae… HBM666.X… TTD - Uni… Fema… 82    White 2024-04-03             NA    #> 10 5cc62ac9… HBM993.R… TTD - Uni… Fema… 75    White 2024-04-03             NA    #> # ℹ 218 more rows #> # ℹ abbreviated name: ¹​last_modified_timestamp  collections <- collections() collections #> # A tibble: 18 × 4 #>    uuid                             hubmap_id       last_modified_timest…¹ title #>    <chr>                            <chr>           <chr>                  <chr> #>  1 3ae4ddfc175d768af5526a010bfe95aa HBM585.QPDV.454 2023-03-27             \"Spa… #>  2 074df152c7d3dc2e09ec2400e947bc0c HBM692.JRZB.356 2022-10-27             \"Hig… #>  3 c87fa4ec3aa87af19a9ad29d2e2b4c5c HBM776.RGSW.867 2022-09-02             \"\\\"A… #>  4 34b068d4a926f77fd98b3d968b6c172f HBM426.WQXQ.244 2022-04-20             \"Hum… #>  5 4964d24bbc6668a72c4cbb5e0393a6bc HBM925.SGXL.596 2021-05-19             \"HuB… #>  6 6a6efd0c1a2681dc7d2faab8e4ab0bca HBM876.XNRH.336 2020-09-28             \"Mul… #>  7 4b87c7596e1f4b4443612862fc562ff1 HBM748.JFJF.982 2020-09-28             \"Mul… #>  8 eb063a0ed8a68117b17345415ab4dd3c HBM554.MXBG.848 2020-09-28             \"Mul… #>  9 a320abcf56241be2e5e453401efeaaf3 HBM556.TLMK.545 2020-09-28             \"Mul… #> 10 3695ab25f42ee161fd05e75c4688847e HBM496.TWCK.764 2020-09-28             \"Mul… #> 11 90399057f6ff0ff18d4c46a378f0b069 HBM789.JXCT.358 2020-09-28             \"Mul… #> 12 590b0485a196956284b8f3344276bc50 HBM524.VZTB.679 2020-09-28             \"Mul… #> 13 c747e19eb2667a3dca96a38a8dd562c5 HBM965.NVDC.564 2020-09-28             \"Mul… #> 14 36a64b1b9a02b11e3f55ea84e6d3203a HBM427.DBBN.329 2020-09-28             \"Mul… #> 15 117c31327191f720e26b901e58a1f68b HBM284.FSBD.955 2020-09-28             \"Mul… #> 16 e9ef358a160a32294aa8dbe3f3c09297 HBM237.XGGL.844 2020-09-28             \"Mul… #> 17 6006923624c4745cbee806a331aaff54 HBM273.THFN.643 2020-09-28             \"Mul… #> 18 381f65e58d5e2c1d16a9cef2cc203aab HBM289.PCBM.487 2020-09-28             \"Mul… #> # ℹ abbreviated name: ¹​last_modified_timestamp  publications <- publications() publications #> # A tibble: 9 × 7 #>   uuid      hubmap_id last_modified_timest…¹ publication_date publication_status #>   <chr>     <chr>     <chr>                  <chr>            <chr>              #> 1 77ab3588… HBM222.S… 2023-07-18             2023-07-20       TRUE               #> 2 aea510e3… HBM332.M… 2023-07-18             2022-10-24       TRUE               #> 3 2ced91fd… HBM885.X… 2023-07-18             2021-10-18       FALSE              #> 4 e8338966… HBM695.W… 2023-07-18             2023-07-19       TRUE               #> 5 dd0e7aea… HBM599.D… 2023-07-18             2023-07-19       TRUE               #> 6 3c727366… HBM629.D… 2023-07-18             2023-07-19       TRUE               #> 7 0de8528c… HBM473.R… 2023-07-18             2023-07-19       TRUE               #> 8 eb975811… HBM464.W… 2023-07-18             2023-07-19       TRUE               #> 9 72cbeb8f… HBM222.Z… 2023-07-18             2023-07-19       TRUE               #> # ℹ abbreviated name: ¹​last_modified_timestamp #> # ℹ 2 more variables: publication_venue <chr>, title <chr> # as = \"tibble\" (default) datasets_col_tbl <- datasets_default_columns(as = \"tibble\") datasets_col_tbl #> # A tibble: 13 × 1 #>    columns                     #>    <chr>                       #>  1 uuid                        #>  2 hubmap_id                   #>  3 group_name                  #>  4 data_types                  #>  5 dataset_type                #>  6 organ                       #>  7 analyte_class               #>  8 dataset_processing_category #>  9 sample_category             #> 10 registered_by               #> 11 status                      #> 12 last_modified_timestamp     #> 13 donor.hubmap_id  # as = \"character\" datasets_col_char <- datasets_default_columns(as = \"character\") datasets_col_char #>  [1] \"uuid\"                        \"hubmap_id\"                   #>  [3] \"group_name\"                  \"data_types\"                  #>  [5] \"dataset_type\"                \"organ\"                       #>  [7] \"analyte_class\"               \"dataset_processing_category\" #>  [9] \"sample_category\"             \"registered_by\"               #> [11] \"status\"                      \"last_modified_timestamp\"     #> [13] \"donor.hubmap_id\" tbl <- bind_cols(     dataset = datasets_default_columns(as = \"character\"),     sample = c(samples_default_columns(as = \"character\"), rep(NA, 6)),     donor = c(donors_default_columns(as = \"character\"), rep(NA, 5)),     collection = c(collections_default_columns(as = \"character\"),                     rep(NA, 9)),     publication = c(publications_default_columns(as = \"character\"),                      rep(NA, 6)) )  tbl #> # A tibble: 13 × 5 #>    dataset                     sample               donor collection publication #>    <chr>                       <chr>                <chr> <chr>      <chr>       #>  1 uuid                        uuid                 hubm… uuid       uuid        #>  2 hubmap_id                   hubmap_id            uuid  hubmap_id  hubmap_id   #>  3 group_name                  group_name           grou… title      title       #>  4 data_types                  sample_category      Sex   last_modi… publicatio… #>  5 dataset_type                organ                Age   NA         last_modif… #>  6 organ                       last_modified_times… Body… NA         publicatio… #>  7 analyte_class               donor.hubmap_id      Race  NA         publicatio… #>  8 dataset_processing_category NA                   last… NA         NA          #>  9 sample_category             NA                   NA    NA         NA          #> 10 registered_by               NA                   NA    NA         NA          #> 11 status                      NA                   NA    NA         NA          #> 12 last_modified_timestamp     NA                   NA    NA         NA          #> 13 donor.hubmap_id             NA                   NA    NA         NA organs <- organ() organs #> # A tibble: 37 × 2 #>    abbreviation name                  #>    <chr>        <chr>                 #>  1 AO           Aorta                 #>  2 BD           Blood                 #>  3 BL           Bladder               #>  4 BM           Bone Marrow           #>  5 BR           Brain                 #>  6 HT           Heart                 #>  7 LB           Bronchus (Left)       #>  8 LE           Eye (Left)            #>  9 LF           Fallopian Tube (Left) #> 10 LI           Large Intestine       #> # ℹ 27 more rows # Example from datasets() datasets |>     filter(organ == 'Small Intestine') |>     count() #> # A tibble: 1 × 1 #>       n #>   <int> #> 1   424 dataset_uuid <- datasets |>     filter(dataset_type == \"Auto-fluorescence\",             organ == \"Kidney (Right)\") |>     head(1) |>     pull(uuid)  # Full Information dataset_detail(dataset_uuid) #> # A tibble: 1 × 35 #>   ancestor_ids ancestors  contacts   contains_human_genetic_seque…¹ contributors #>   <list>       <list>     <list>     <lgl>                          <list>       #> 1 <chr [4]>    <list [4]> <list [1]> FALSE                          <list [16]>  #> # ℹ abbreviated name: ¹​contains_human_genetic_sequences #> # ℹ 30 more variables: created_by_user_displayname <chr>, #> #   created_by_user_email <chr>, created_timestamp <dbl>, #> #   creation_action <chr>, data_access_level <chr>, dataset_type <chr>, #> #   descendant_ids <list>, descendants <list>, description <chr>, #> #   display_subtype <chr>, doi_url <chr>, donor <list>, entity_type <chr>, #> #   files <list>, group_name <chr>, group_uuid <chr>, hubmap_id <chr>, …  # Specific Information dataset_detail(uuid = dataset_uuid) |>     select(contributors) |>     unnest_longer(contributors) |>     unnest_wider(everything()) #> # A tibble: 16 × 11 #>    affiliation              display_name email first_name is_contact is_operator #>    <chr>                    <chr>        <chr> <chr>      <chr>      <chr>       #>  1 Biomolecular Multimodal… Jamie L. Al… jami… Jamie      No         Yes         #>  2 Delft Center for System… Lukasz Migas l.g.… Lukasz     No         Yes         #>  3 Biomolecular Multimodal… Nathan Heat… nath… Nathan     No         Yes         #>  4 Biomolecular Multimodal… Jeffrey M. … jeff… Jeffrey    Yes        No          #>  5 Delft Center for System… Leonor Tide… l.e.… Leonoor    No         Yes         #>  6 Delft Center for System… Raf Van de … Raf.… Raf        No         No          #>  7 Biomolecular Multimodal… Melissa A. … meli… Melissa    No         Yes         #>  8 Biomolecular Multimodal… Madeline E.… made… Madeline   No         Yes         #>  9 Biomolecular Multimodal… Ellie L. Pi… elli… Ellie      No         Yes         #> 10 Delft Center for System… Felipe Moser f.a.… Felipe     No         Yes         #> 11 Division of Nephrology … Mark deCaes… mark… Mark       No         Yes         #> 12 Division of Nephrology … Agnes B. Fo… agne… Agnes      No         Yes         #> 13 Division of Nephrology … Haichun Yang haic… Haichun    No         Yes         #> 14 Biomolecular Multimodal… Tina Tsui    tina… Tina       No         Yes         #> 15 Biomolecular Multimodal… Katerina V.… kate… Katerina   No         Yes         #> 16 Biomolecular Multimodal… Allison B. … alli… Allison    No         Yes         #> # ℹ 5 more variables: is_principal_investigator <chr>, last_name <chr>, #> #   metadata_schema_id <chr>, middle_name_or_initial <chr>, orcid <chr> sample_uuid <- samples |>     filter(last_modified_timestamp >= \"2023-01-01\" &             last_modified_timestamp <= \"2023-10-01\",             organ == \"Kidney (Left)\") |>     head(1) |>     pull(uuid)  sample_uuid #> [1] \"c40774aa2f52a2811db15c5ca1949314\"  # Derived Datasets sample_derived(uuid = sample_uuid, entity_type = \"Dataset\") #> # A tibble: 12 × 9 #>    uuid                      hubmap_id group_name dataset_type data_types status #>    <chr>                     <chr>     <chr>      <chr>        <chr>      <chr>  #>  1 4fddf6de0f42a7e2648b547a… HBM782.S… Vanderbil… MALDI        MALDI-IMS  Publi… #>  2 b6fd505b8e8e1829a2783570… HBM775.Q… Vanderbil… MALDI [Imag… image_pyr… Publi… #>  3 c3db2027e148e92fecb85e7d… HBM438.V… Vanderbil… Auto-fluore… AF         Publi… #>  4 3a10030d3323e5353cfdc3ad… HBM733.G… Vanderbil… Auto-fluore… image_pyr… Publi… #>  5 71642e4c4a9cc12f59f3317b… HBM846.F… Vanderbil… Histology    PAS        Publi… #>  6 bd42ab2f422e45ce6b0f3f55… HBM665.R… Vanderbil… Histology [… image_pyr… Publi… #>  7 c8ad223f01b45b25e0dcb07c… HBM472.N… Vanderbil… MALDI        MALDI-IMS  Publi… #>  8 f7b49444b974c98c6300e0bf… HBM629.S… Vanderbil… MALDI [Imag… image_pyr… Publi… #>  9 beb1b65624fe85b527ee2ce8… HBM873.P… Vanderbil… Auto-fluore… AF         Publi… #> 10 c25d6febe5b007ad32bc5924… HBM672.N… Vanderbil… Auto-fluore… image_pyr… Publi… #> 11 744647801573d1d5700ee752… HBM222.J… Vanderbil… Auto-fluore… AF         Publi… #> 12 4a98c43ab3b20b06c11dfbed… HBM973.L… Vanderbil… Auto-fluore… image_pyr… Publi… #> # ℹ 3 more variables: last_modified_timestamp <chr>, registered_by <chr>, #> #   dataset_processing_category <chr>  # Derived Samples sample_derived(uuid = sample_uuid, entity_type = \"Sample\") #> # A tibble: 3 × 6 #>   uuid         hubmap_id group_name sample_category last_modified_timest…¹ organ #>   <chr>        <chr>     <chr>      <chr>           <chr>                  <chr> #> 1 ec54b7d4ab4… HBM299.P… Vanderbil… section         2021-08-18             Kidn… #> 2 ae98f6ca4f1… HBM636.L… Vanderbil… section         2021-08-18             Kidn… #> 3 b099a37195f… HBM937.H… Vanderbil… section         2021-08-18             Kidn… #> # ℹ abbreviated name: ¹​last_modified_timestamp donor_sub <- donors |>     filter(Sex == \"Female\",             Age <= 76 & Age >= 55,             Race == \"White\",             BMI <= 25,             last_modified_timestamp >= \"2020-01-08\" &             last_modified_timestamp <= \"2020-06-30\") |>     head(1)  # Datasets donor_sub_dataset <- donor_sub |>     left_join(datasets |>                 select(-c(group_name, last_modified_timestamp)) |>                 rename(\"dataset_uuid\" = \"uuid\",                         \"dataset_hubmap_id\" = \"hubmap_id\"),                  by = c(\"hubmap_id\" = \"donor.hubmap_id\"))  donor_sub_dataset #> # A tibble: 76 × 18 #>    uuid      hubmap_id group_name Sex   Age   Race  last_modified_timest…¹ BMI   #>    <chr>     <chr>     <chr>      <chr> <chr> <chr> <chr>                  <chr> #>  1 f8d963ca… HBM289.B… Universit… Fema… 57    White 2020-01-08             19.6  #>  2 f8d963ca… HBM289.B… Universit… Fema… 57    White 2020-01-08             19.6  #>  3 f8d963ca… HBM289.B… Universit… Fema… 57    White 2020-01-08             19.6  #>  4 f8d963ca… HBM289.B… Universit… Fema… 57    White 2020-01-08             19.6  #>  5 f8d963ca… HBM289.B… Universit… Fema… 57    White 2020-01-08             19.6  #>  6 f8d963ca… HBM289.B… Universit… Fema… 57    White 2020-01-08             19.6  #>  7 f8d963ca… HBM289.B… Universit… Fema… 57    White 2020-01-08             19.6  #>  8 f8d963ca… HBM289.B… Universit… Fema… 57    White 2020-01-08             19.6  #>  9 f8d963ca… HBM289.B… Universit… Fema… 57    White 2020-01-08             19.6  #> 10 f8d963ca… HBM289.B… Universit… Fema… 57    White 2020-01-08             19.6  #> # ℹ 66 more rows #> # ℹ abbreviated name: ¹​last_modified_timestamp #> # ℹ 10 more variables: dataset_uuid <chr>, dataset_hubmap_id <chr>, #> #   registered_by <chr>, dataset_processing_category <chr>, dataset_type <chr>, #> #   sample_category <chr>, status <chr>, analyte_class <chr>, data_types <chr>, #> #   organ <chr>  # Samples donor_sub_sample <- donor_sub |>     left_join(samples |>                 select(-c(group_name, last_modified_timestamp)) |>                 rename(\"sample_uuid\" = \"uuid\",                         \"sample_hubmap_id\" = \"hubmap_id\"),                 by = c(\"hubmap_id\" = \"donor.hubmap_id\"))  donor_sub_sample #> # A tibble: 9 × 12 #>   uuid       hubmap_id group_name Sex   Age   Race  last_modified_timest…¹ BMI   #>   <chr>      <chr>     <chr>      <chr> <chr> <chr> <chr>                  <chr> #> 1 f8d963cab… HBM289.B… Universit… Fema… 57    White 2020-01-08             19.6  #> 2 f8d963cab… HBM289.B… Universit… Fema… 57    White 2020-01-08             19.6  #> 3 f8d963cab… HBM289.B… Universit… Fema… 57    White 2020-01-08             19.6  #> 4 f8d963cab… HBM289.B… Universit… Fema… 57    White 2020-01-08             19.6  #> 5 f8d963cab… HBM289.B… Universit… Fema… 57    White 2020-01-08             19.6  #> 6 f8d963cab… HBM289.B… Universit… Fema… 57    White 2020-01-08             19.6  #> 7 f8d963cab… HBM289.B… Universit… Fema… 57    White 2020-01-08             19.6  #> 8 f8d963cab… HBM289.B… Universit… Fema… 57    White 2020-01-08             19.6  #> 9 f8d963cab… HBM289.B… Universit… Fema… 57    White 2020-01-08             19.6  #> # ℹ abbreviated name: ¹​last_modified_timestamp #> # ℹ 4 more variables: sample_uuid <chr>, sample_hubmap_id <chr>, #> #   sample_category <chr>, organ <chr> # Derived Datasets donor_sub_uuid <- donor_sub |>     pull(uuid)  donor_sub_uuid_dataset <- donor_derived(uuid = donor_sub_uuid,                                         entity_type = \"Dataset\")  all(donor_sub_dataset$dataset_uuid %in% donor_sub_uuid_dataset$uuid) #> [1] TRUE  # Derived Samples donor_sub_uuid_sample <- donor_derived(uuid = donor_sub_uuid,                                         entity_type = \"Sample\")  all(donor_sub_sample$sample_uuid %in% donor_sub_uuid_sample$uuid) #> [1] TRUE  length(donor_sub_sample$sample_uuid) ==          length(donor_sub_uuid_sample$uuid) #> [1] TRUE sample_donor_hubmap_id <- samples |>     filter(uuid == sample_uuid) |>     pull(donor.hubmap_id)  sample_donor_hubmap_id #> [1] \"HBM994.BBMC.798\"  # Derived Samples -> Different sample_hubmap_id_sample_1 <- samples |>     filter(donor.hubmap_id == sample_donor_hubmap_id)  sample_hubmap_id_sample_1 #> # A tibble: 5 × 7 #>   uuid               hubmap_id donor.hubmap_id group_name last_modified_timest…¹ #>   <chr>              <chr>     <chr>           <chr>      <chr>                  #> 1 c40774aa2f52a2811… HBM786.C… HBM994.BBMC.798 Vanderbil… 2023-05-30             #> 2 b1d41395cc87b8eff… HBM962.R… HBM994.BBMC.798 Vanderbil… 2023-05-30             #> 3 ec54b7d4ab4545166… HBM299.P… HBM994.BBMC.798 Vanderbil… 2021-08-18             #> 4 ae98f6ca4f1f9950f… HBM636.L… HBM994.BBMC.798 Vanderbil… 2021-08-18             #> 5 b099a37195f532e4b… HBM937.H… HBM994.BBMC.798 Vanderbil… 2021-08-18             #> # ℹ abbreviated name: ¹​last_modified_timestamp #> # ℹ 2 more variables: sample_category <chr>, organ <chr>  sample_hubmap_id_sample_2 <- sample_derived(uuid = sample_uuid,                                              entity_type = \"Sample\")  sample_hubmap_id_sample_2 #> # A tibble: 3 × 6 #>   uuid         hubmap_id group_name sample_category last_modified_timest…¹ organ #>   <chr>        <chr>     <chr>      <chr>           <chr>                  <chr> #> 1 ec54b7d4ab4… HBM299.P… Vanderbil… section         2021-08-18             Kidn… #> 2 ae98f6ca4f1… HBM636.L… Vanderbil… section         2021-08-18             Kidn… #> 3 b099a37195f… HBM937.H… Vanderbil… section         2021-08-18             Kidn… #> # ℹ abbreviated name: ¹​last_modified_timestamp  length(sample_hubmap_id_sample_1$uuid) ==          length(sample_hubmap_id_sample_2$uuid) #> [1] FALSE   # Derived Datasets -> Same sample_hubmap_id_dataset_1 <- datasets |>     filter(donor.hubmap_id == sample_donor_hubmap_id)  sample_hubmap_id_dataset_2 <- sample_derived(uuid = sample_uuid,                                             entity_type = \"Dataset\")  all(sample_hubmap_id_dataset_1$uuid %in%         sample_hubmap_id_dataset_2$uuid) #> [1] TRUE  length(sample_hubmap_id_dataset_1$uuid) ==          length(sample_hubmap_id_dataset_2$uuid) #> [1] TRUE collection_uuid <- collections |>     filter(last_modified_timestamp >= \"2023-01-01\") |>     head(1) |>     pull(uuid)  collection_datasets(collection_uuid) #> # A tibble: 211 × 9 #>    uuid                 hubmap_id data_types dataset_type dataset_processing_c…¹ #>    <chr>                <chr>     <list>     <chr>        <chr>                  #>  1 59c8093930a89bc9f91… HBM296.N… <chr [1]>  MIBI         Raw                    #>  2 09dcc99a01f38aae6a1… HBM374.N… <chr [1]>  MIBI         Raw                    #>  3 c0ede749605a0062419… HBM255.F… <chr [1]>  MIBI         Raw                    #>  4 18a68d8433ac8bf3fcc… HBM297.D… <chr [1]>  MIBI         Raw                    #>  5 4e6a2c1bd0393f5affb… HBM495.D… <chr [1]>  MIBI         Raw                    #>  6 f5619b5785725dfc5be… HBM452.K… <chr [1]>  MIBI         Raw                    #>  7 2b56f0f0ee934e396d5… HBM887.D… <chr [1]>  MIBI         Raw                    #>  8 54eec389e909636837c… HBM439.H… <chr [1]>  MIBI         Raw                    #>  9 b77be6257b71ae7386f… HBM225.P… <chr [1]>  MIBI         Raw                    #> 10 36a80d485f1fb6f56ef… HBM367.Q… <chr [1]>  MIBI         Raw                    #> # ℹ 201 more rows #> # ℹ abbreviated name: ¹​dataset_processing_category #> # ℹ 4 more variables: last_modified_timestamp <dbl>, registered_by <chr>, #> #   status <chr>, organ <chr> publication_uuid <- publications |>     filter(publication_venue == \"Nature\") |>     head(1) |>     pull(uuid)  publication_data(publication_uuid, entity_type = \"Dataset\") #> # A tibble: 1 × 7 #>   uuid     hubmap_id data_types dataset_type status last_modified_timest…¹ organ #>   <chr>    <chr>     <chr>      <chr>        <chr>  <chr>                  <chr> #> 1 3a4fb23… HBM666.R… CODEX      CODEX        Publi… 2022-09-08             Smal… #> # ℹ abbreviated name: ¹​last_modified_timestamp"},{"path":"https://christinehou11.github.io/HuBMAPR/articles/hubmapr_vignettes.html","id":"additional-information","dir":"Articles","previous_headings":"Basic User Guide","what":"Additional Information","title":"Explore Human BioMolecular Atlas Program Data Portal","text":"read textual description one Collection Publication, use collection_information(uuid) publication_information(uuid) respectively. additional contact/author/contributor information can retrieved using collection_contact(uuid) collection_contributors(uuid) Collection entity, publication_authors() Publication entity.","code":"collection_information(uuid = collection_uuid) #> Title #>   Spatiotemporal coordination at the maternal-fetal interface promotes trophoblast invasion and vascular remodeling in the first half of human pregnancy  #>  Description #>   Beginning in the first trimester, fetally derived extravillous trophoblasts (EVTs) invade the uterus and remodel its spiral arteries, transforming them into large, dilated blood vessels left with a thin, discontinuous smooth muscle layer and partially lined with EVTs. Several mechanisms have been proposed to explain how EVTs coordinate with the maternal decidua to promote a tissue microenvironment conducive to spiral artery remodeling (SAR). However, it remains a matter of debate which immune and stromal cell types participate in these interactions and how this process evolves with respect to gestational age. Here, we used a multiomic approach that combined the strengths of spatial proteomics and transcriptomics to construct the first spatiotemporal atlas of the human maternal-fetal interface in the first half of pregnancy. We used multiplexed ion beam imaging by time of flight (MIBI-TOF) and a 37-plex antibody panel to analyze ∼500,000 cells and 588 spiral arteries within intact decidua from 66 patients between 6-20 weeks of gestation, integrating this with coregistered transcriptomic profiles. Gestational age substantially influenced the frequency of many maternal immune and stromal cells, with tolerogenic subsets expressing CD206, CD163, TIM-3, Galectin-9, and IDO-1 increasingly enriched and colocalized at later time points. In contrast, SAR progression preferentially correlated with EVT invasion and was transcriptionally defined by 78 gene ontology pathways exhibiting unique monotonic and biphasic trends. Lastly, we developed an integrated model of SAR supporting an intravasation mechanism where invasion is accompanied by upregulation of pro-angiogenic, immunoregulatory EVT programs that promote interactions with vascular endothelium while avoiding activation of immune cells in circulating maternal blood. Taken together, these results support a coordinated model of decidualization in which increasing gestational age drives a transition in maternal decidua towards a tolerogenic niche conducive to locally regulated, EVT-dependent SAR.  #>  DOI #>  -  https://doi.org/10.35079/hbm585.qpdv.454  #>  URL #>  -  10.35079/hbm585.qpdv.454  publication_information(uuid = publication_uuid) #> Title #>  Organization of the human intestine at single-cell resolution #> Abstract #>  We investigated the spatial arrangement of individual cells using multiplexed imaging, as well as single-nucleus RNA and open chromatin assays, across eight different regions of the intestine from nine donors. Through comprehensive analyses, we observed significant variations in cell compositions among the intestinal regions and the intricate nature of epithelial subtypes. Furthermore, we discovered that similar cell types form distinct neighborhoods and communities, highlighting the presence of unique immunological niches within the intestine. Additionally, we identified gene regulatory differences within these cells, suggesting the existence of a regulatory differentiation cascade, and established associations between specific cell types and the heritability of intestinal diseases. These findings elucidate the intricate cell composition, regulation, and spatial organization within this organ, providing a valuable reference map for advancing our understanding of human biology and disease. #> Manuscript #>  - Nature: https://doi.org/10.1038/s41586-023-05915-x #> Corresponding Authors #>  - John Hickey 0000-0001-9961-7673 #> Data Types #>  - CODEX #> Organs #>  - Small Intestine # Collection collection_contacts(uuid = collection_uuid) #> # A tibble: 2 × 3 #>   name              affiliation                                  orcid_id        #>   <chr>             <chr>                                        <chr>           #> 1 Shirley Greenbaum Department of Pathology, Stanford University 0000-0002-0680… #> 2 Michael Angelo    Department of Pathology, Stanford University 0000-0003-1531…  collection_contributors(uuid = collection_uuid) #> # A tibble: 13 × 3 #>    name              affiliation                                        orcid_id #>    <chr>             <chr>                                              <chr>    #>  1 Shirley Greenbaum Department of Pathology, Stanford University       0000-00… #>  2 Inna Averbukh     Department of Pathology, Stanford University       0000-00… #>  3 Erin Soon         Department of Pathology, Stanford University       0000-00… #>  4 Gabrielle Rizzuto Department of Pathology, UCSF                      0000-00… #>  5 Noah Greenwald    Department of Pathology, Stanford University       0000-00… #>  6 Marc Bosse        Department of Pathology, Stanford University       0000-00… #>  7 Eleni G. Jaswa    Department of Obstetrics, Gynecology & Reproducti… 0000-00… #>  8 Zumana Khair      Department of Pathology, Stanford University       0000-00… #>  9 David Van Valen   Division of Biology and Bioengineering, Californi… 0000-00… #> 10 Leeat Keren       Department of Molecular Cell Biology, Weizmann In… 0000-00… #> 11 Travis Hollmann   Department of Pathology, Memorial Sloan Kettering… 0000-00… #> 12 Matt van de Rjin  Department of Pathology, Stanford University       0000-00… #> 13 Michael Angelo    Department of Pathology, Stanford University       0000-00…  # Publication publication_authors(uuid = publication_uuid) #> # A tibble: 3 × 8 #>   affiliation       first_name is_contact last_name middle_name_or_initial name  #>   <chr>             <chr>      <chr>      <chr>     <chr>                  <chr> #> 1 Stanford Univers… John       TRUE       Hickey    \"W\"                    John… #> 2 Stanford Univers… Chiara     FALSE      Caraccio  \"\"                     Chia… #> 3 Stanford Univers… Garry      FALSE      Nolan     \"\"                     Garr… #> # ℹ 2 more variables: orcid_id <chr>, version <chr>"},{"path":[]},{"path":"https://christinehou11.github.io/HuBMAPR/articles/hubmapr_vignettes.html","id":"r-session-information","dir":"Articles","previous_headings":"","what":"R session information","title":"Explore Human BioMolecular Atlas Program Data Portal","text":"","code":"#> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    #>  [6] LC_MESSAGES=C.UTF-8    LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           LC_TELEPHONE=C         #> [11] LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] HuBMAPR_0.9.0    tidyr_1.3.1      dplyr_1.1.4      BiocStyle_2.32.1 #>  #> loaded via a namespace (and not attached): #>  [1] jsonlite_1.8.8      compiler_4.4.1      BiocManager_1.30.23 tidyselect_1.2.1    stringr_1.5.1       #>  [6] jquerylib_0.1.4     systemfonts_1.1.0   textshaping_0.4.0   yaml_2.3.10         fastmap_1.2.0       #> [11] R6_2.5.1            rjsoncons_1.3.1     generics_0.1.3      curl_5.2.1          httr2_1.0.2         #> [16] knitr_1.48          tibble_3.2.1        bookdown_0.40       desc_1.4.3          bslib_0.8.0         #> [21] pillar_1.9.0        rlang_1.1.4         utf8_1.2.4          stringi_1.8.4       cachem_1.1.0        #> [26] xfun_0.46           fs_1.6.4            sass_0.4.9          cli_3.6.3           withr_3.0.1         #> [31] pkgdown_2.1.0       magrittr_2.0.3      digest_0.6.36       rappdirs_0.3.3      lifecycle_1.0.4     #> [36] vctrs_0.6.5         evaluate_0.24.0     glue_1.7.0          whisker_0.4.1       ragg_1.3.2          #> [41] fansi_1.0.6         rmarkdown_2.27      purrr_1.0.2         tools_4.4.1         pkgconfig_2.0.3     #> [46] htmltools_0.5.8.1"},{"path":"https://christinehou11.github.io/HuBMAPR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christine Hou. Author, maintainer. Martin Morgan. Author. Federico Marini. Author.","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hou C, Morgan M, Marini F (2024). HuBMAPR: Interface 'HuBMAP'. R package version 0.9.0, https://github.com/christinehou11/HuBMAPR, https://christinehou11.github.io/HuBMAPR/.","code":"@Manual{,   title = {HuBMAPR: Interface to 'HuBMAP'},   author = {Christine Hou and Martin Morgan and Federico Marini},   year = {2024},   note = {R package version 0.9.0, https://github.com/christinehou11/HuBMAPR},   url = {https://christinehou11.github.io/HuBMAPR/}, }"},{"path":"https://christinehou11.github.io/HuBMAPR/index.html","id":"hubmapr","dir":"","previous_headings":"","what":"HuBMAPR","title":"Interface to HuBMAP","text":"R, load package cloning repository. {r} devtools::load_all() HuBMAP consortium, five main entity types, entity type related functions included one separate R script. dataset: datasets.R datasets(size = 10000L, = 0L): returns selected information datasets tibble. maximum number rows returned tibble 10000L. size numeric parameters, determining arbitrary size return location dataset return based last modified date. datasets_default_columns(= c(“tibble”, “character”)): returns selected default columns character tibble included returned tibble datasets(). columns uuid, hubmap id, group name, dataset type, data types, organ, status, last modified timestamp, donor hubmap id. dataset_detail(uuid): return available information one specific dataset tibble. sample: samples.R samples(size = 10000L, = 0L) samples_default_columns(= c(“tibble”, “character”)): selected default columns uuid, hubmap id, group name, sample category, organ, last modified timestamp, donor hubmap id sample_detail(uuid) samples_derived(uuid, entity_type = c(“Dataset”, “Sample”)): returns derived Dataset(s) Sample(s) information tibble. Derived dataset(s) include columns uuid, hubmap id, group name, dataset type, data types, status, last modified timestamp (portal page) Derived sample(s) include columns uuid, hubmap id, group name, sample category, last modified timestamp, organ Note: portal page show tab see derived samples screenshot, based provenance offered, indeed /derived sample(s). donor: donors.R donors(size = 10000L, = 0L) donors_default_columns(= c(“character”,“tibble”)): selected default columns uuid, hubmap id, group name, Sex, Age, Body Mass Index, Race, last modified timestamp donor_detail(uuid) donor_derived(uuid, entity_type = c(“Dataset”, “Sample”)) returned tibble(s) derived dataset(s)/sample(s) selected columns. collection: collections.R collections(size = 10000L, = 0L) collections__default_columns(= c(“tibble”, “character”)): selected default columns uuid, hubmap id, title, last modified timestamp collection_information(uuid): print textual descriptions specific collection collection_datasets(uuid): return related datasets one collection. selected default columns uuid, hubmap id, data types, dataset types, last modified timestamp, organ, created user display name, status collection_contacts(uuid): return contact persons’ name, affiliation, orcid id tibble collection_contributors(uuid): return contributors name, affiliation, orcid id tibble publication: publications.R publications(size = 10000L, = 0L) publications__default_columns(= c(“tibble”, “character”)): selected default columns uuid, hubmap id, title, publication venue, publication date, publication status, last modified timestamp publication_information(uuid) publication_data(entity = c(“Dataset”,“Sample”,“Donor”)) publication_authors(uuid) complete list data visualizations available download mostly saved Globus HuBMAP Collection, files.R function files_globus_url(uuid) download/access . three different scenarios accessing data visualizations: UUID data available via Globus: jump Globus page UUID data available via others (dbGAP SRA): dbGAP stands “database Genotypes Phenotypes” SRA stands “Sequence Read Archive” dbGAP yes + SRA yes dbGAP yes + SRA print message notify datasets available via Globus give dbGAP SRA (available) explore UUID available: print message notify unavailability template.R functions language_template(language, name, …) json_template(name, …) functions run json queries saved inst/json. utilities.R contains many internal functions.","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/collection_information.html","id":null,"dir":"Reference","previous_headings":"","what":"Collection Information Summaries from Collection UUID — collection_information","title":"Collection Information Summaries from Collection UUID — collection_information","text":"collection_information() queries HuBMAP collection title, description, DOI, URL, creation date, last modified time date. print.collection_information() organizes returned tibble collection_information() legible format.","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/collection_information.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collection Information Summaries from Collection UUID — collection_information","text":"","code":"collection_information(uuid)  # S3 method for class 'collection_information' print(x, ...)"},{"path":"https://christinehou11.github.io/HuBMAPR/reference/collection_information.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collection Information Summaries from Collection UUID — collection_information","text":"uuid character(1) corresponding HuBMAP Collection UUID string. expected 32-digit hex number. x object class collection_information, result call collection_information(). ... additional arguments, required conform print generic used.","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/collection_information.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collection Information Summaries from Collection UUID — collection_information","text":"collection_information() returns tibble, columns containing information collection. tibble class collection_information printed character. print.collection_information() invoked automatically result collection_information() displayed side effect displaying object.","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/collection_information.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collection Information Summaries from Collection UUID — collection_information","text":"","code":"uuid <- \"90399057f6ff0ff18d4c46a378f0b069\" collection_information(uuid) #> Title #>   Multimodal Molecular Imaging of Human Kidney Tissue From a 53 Year Old Black or African American Male Donor  #>  Description #>   Multimodal molecular imaging data collected from the Left Kidney of a 53 year old Black or African American Male donor by the Biomolecular Multimodal Imaging Center (BIOMC) at Vanderbilt University. BIOMIC is a Tissue Mapping Center that is part of the NIH funded Human Biomolecular Atlas Program (HuBMAP). Datasets generated by BIOMIC combine MALDI imaging mass spectrometry with various microscopy modalities including autoflourescence and stained microscopy. Support was provided by the NIH Common Fund and National Institute of Diabetes and Digestive and Kidney Diseases (U54 DK120058). Tissue was collected through the Cooperative Human Tissue Network with support provided by the NIH National Cancer Institute (5 UM1 CA183727-08).  #>  DOI #>  -  https://doi.org/10.35079/hbm789.jxct.358  #>  URL #>  -  10.35079/hbm789.jxct.358"},{"path":"https://christinehou11.github.io/HuBMAPR/reference/collections.html","id":null,"dir":"Reference","previous_headings":"","what":"HuBMAP Collections — collections","title":"HuBMAP Collections — collections","text":"collections() returns details available collections, ordered last modified dates *_columns() returns tibble named character vector describing content tibble returned samples(), datasets(),  donors(), collections(), publications(). collection_contacts() takes unique collection_id returns contacts information one specified collection tibble collection_datasets() takes unique collection_id returns related datasets one specified collection tibble collection_contributors() takes unique collection_id returns contributors information one specified collection tibble","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/collections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HuBMAP Collections — collections","text":"","code":"collections(size = 10000L, from = 0L)  collections_default_columns(as = c(\"tibble\", \"character\"))  collection_contacts(uuid)  collection_datasets(uuid)  collection_contributors(uuid)"},{"path":"https://christinehou11.github.io/HuBMAPR/reference/collections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HuBMAP Collections — collections","text":"size integer(1) number maximum results return; default (10000) meant large enough return results. integer(1) number number results skip, defaulting 0. character(1) return format. One \"tibble\" (default), \"character\". uuid character(1) corresponding HuBMAP Collection UUID string. expected 32-digit hex number.","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/collections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HuBMAP Collections — collections","text":"*_columns() returns named list name containing column name used tibble returned samples(), datasets(),  donors(), collections(),  publications(). = \"tibble\",return value tibble paths elements abbreviations names.","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/collections.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"HuBMAP Collections — collections","text":"Additional details provided HuBMAP consortium webpage, https://software.docs.hubmapconsortium.org/apis Additional details provided HuBMAP consortium webpage, https://software.docs.hubmapconsortium.org/apis Additional details provided HuBMAP consortium webpage, https://software.docs.hubmapconsortium.org/apis Additional details provided HuBMAP consortium webpage, https://software.docs.hubmapconsortium.org/apis","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/collections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HuBMAP Collections — collections","text":"","code":"collections(size = 4, from = 2) #> # A tibble: 4 × 4 #>   uuid                             hubmap_id       last_modified_timestamp title #>   <chr>                            <chr>           <chr>                   <chr> #> 1 c87fa4ec3aa87af19a9ad29d2e2b4c5c HBM776.RGSW.867 2022-09-02              \"\\\"A… #> 2 34b068d4a926f77fd98b3d968b6c172f HBM426.WQXQ.244 2022-04-20              \"Hum… #> 3 4964d24bbc6668a72c4cbb5e0393a6bc HBM925.SGXL.596 2021-05-19              \"HuB… #> 4 6a6efd0c1a2681dc7d2faab8e4ab0bca HBM876.XNRH.336 2020-09-28              \"Mul… collections_default_columns() #> # A tibble: 4 × 1 #>   columns                 #>   <chr>                   #> 1 uuid                    #> 2 hubmap_id               #> 3 title                   #> 4 last_modified_timestamp  uuid <- \"381f65e58d5e2c1d16a9cef2cc203aab\" collection_contacts(uuid) #> # A tibble: 1 × 3 #>   name                 affiliation           orcid_id            #>   <chr>                <chr>                 <chr>               #> 1 Jeffrey M. Spraggins Vanderbilt University 0000-0001-9198-5498 uuid <- \"381f65e58d5e2c1d16a9cef2cc203aab\" collection_datasets(uuid) #> # A tibble: 4 × 9 #>   uuid                  hubmap_id data_types dataset_type dataset_processing_c…¹ #>   <chr>                 <chr>     <list>     <chr>        <chr>                  #> 1 a11fe9d14122d4254acf… HBM592.J… <chr [1]>  Auto-fluore… Raw                    #> 2 6e7ba37ff1f480f2bfa8… HBM525.D… <chr [1]>  MALDI        Raw                    #> 3 484b359a4b9d4e370f52… HBM264.X… <chr [1]>  Histology    Raw                    #> 4 60ed8e03152b51d5d9c8… HBM253.W… <chr [1]>  MALDI        Raw                    #> # ℹ abbreviated name: ¹​dataset_processing_category #> # ℹ 4 more variables: last_modified_timestamp <dbl>, registered_by <chr>, #> #   status <chr>, organ <chr> uuid <- \"590b0485a196956284b8f3344276bc50\" collection_contributors(uuid) #> # A tibble: 16 × 3 #>    name                   affiliation                    orcid_id            #>    <chr>                  <chr>                          <chr>               #>  1 Elizabeth K. Neumann   Vanderbilt University          0000-0002-6078-3321 #>  2 Nathan Heath Patterson Vanderbilt University          0000-0002-0064-1583 #>  3 David M.G. Anderson    Vanderbilt University          0000-0002-3866-0923 #>  4 Kavya Sharman          Vanderbilt University          0000-0002-3487-7199 #>  5 Lukasz Migas           Delft University of Technology 0000-0002-1884-6405 #>  6 Jamie L. Allen         Vanderbilt University          0000-0002-4739-2166 #>  7 Maya Brewer            Vanderbilt University          0000-0001-5914-0081 #>  8 Jennifer Harvey        Vanderbilt University          0000-0003-3067-1238 #>  9 Haichun Yang           Vanderbilt University          0000-0003-4265-7492 #> 10 Raymond C. Harris      Vanderbilt University          0000-0001-8025-0883 #> 11 Agnes B. Fogo          Vanderbilt University          0000-0003-3698-8527 #> 12 Mark deCaestecker      Vanderbilt University          0000-0001-7926-1673 #> 13 Danielle B. Gutierrez  Vanderbilt University          0000-0001-6355-2134 #> 14 Richard M. Caprioli    Vanderbilt University          0000-0001-5859-3310 #> 15 Raf Van de Plas        Delft University of Technology 0000-0002-2232-7130 #> 16 Jeffrey M. Spraggins   Vanderbilt University          0000-0001-9198-5498"},{"path":"https://christinehou11.github.io/HuBMAPR/reference/datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"HuBMAP Datasets — datasets","title":"HuBMAP Datasets — datasets","text":"datasets returns details available datasets, ordered last modified dates *_columns() returns tibble named character vector describing content tibble returned samples(), datasets(),  donors(), collections(), publications(). dataset_detail() takes unique dataset_id returns details one specified dataset tibble","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HuBMAP Datasets — datasets","text":"","code":"datasets(size = 10000L, from = 0L)  datasets_default_columns(as = c(\"tibble\", \"character\"))  dataset_detail(uuid)"},{"path":"https://christinehou11.github.io/HuBMAPR/reference/datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HuBMAP Datasets — datasets","text":"size integer(1) number maximum results return; default (10000) meant large enough return results. integer(1) number number results skip, defaulting 0. character(1) return format. One \"tibble\" (default), \"character\". uuid character(1) corresponding HuBMAP Dataset UUID string. expected 32-digit hex number.","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HuBMAP Datasets — datasets","text":"*_columns() returns named list name containing column name used tibble returned samples(), datasets(),  donors(), collections(),  publications(). = \"tibble\",return value tibble paths elements abbreviations names.","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/datasets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"HuBMAP Datasets — datasets","text":"Additional details provided HuBMAP consortium webpage, https://software.docs.hubmapconsortium.org/apis","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/datasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HuBMAP Datasets — datasets","text":"","code":"datasets(size = 100, from = 200) datasets_default_columns() #> # A tibble: 13 × 1 #>    columns                     #>    <chr>                       #>  1 uuid                        #>  2 hubmap_id                   #>  3 group_name                  #>  4 data_types                  #>  5 dataset_type                #>  6 organ                       #>  7 analyte_class               #>  8 dataset_processing_category #>  9 sample_category             #> 10 registered_by               #> 11 status                      #> 12 last_modified_timestamp     #> 13 donor.hubmap_id              uuid <- \"7754aa5ebde628b5e92705e33e74a4ef\" dataset_detail(uuid) #> # A tibble: 1 × 31 #>   ancestor_ids ancestors  contains_human_genetic_sequen…¹ created_by_user_disp…² #>   <list>       <list>     <lgl>                           <chr>                  #> 1 <chr [4]>    <list [4]> FALSE                           HuBMAP Process         #> # ℹ abbreviated names: ¹​contains_human_genetic_sequences, #> #   ²​created_by_user_displayname #> # ℹ 27 more variables: created_by_user_email <chr>, created_timestamp <dbl>, #> #   creation_action <chr>, data_access_level <chr>, data_types <list>, #> #   dataset_info <chr>, dataset_type <chr>, descendant_ids <list>, #> #   descendants <list>, display_subtype <chr>, donor <list>, entity_type <chr>, #> #   files <list>, group_name <chr>, group_uuid <chr>, hubmap_id <chr>, …"},{"path":"https://christinehou11.github.io/HuBMAPR/reference/donors.html","id":null,"dir":"Reference","previous_headings":"","what":"HuBMAP Donors — donors","title":"HuBMAP Donors — donors","text":"donors() returns details available samples, ordered last modified dates *_columns() returns tibble named character vector describing content tibble returned samples(), datasets(),  donors(), collections(), publications(). donor_detail() takes unique donor_id returns details one specified sample tibble donor_derived() takes unique donor_id returns derived dataset /sample details.","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/donors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HuBMAP Donors — donors","text":"","code":"donors(size = 10000L, from = 0L)  donors_default_columns(as = c(\"tibble\", \"character\"))  donor_detail(uuid)  donor_derived(uuid, entity_type = c(\"Dataset\", \"Sample\"))"},{"path":"https://christinehou11.github.io/HuBMAPR/reference/donors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HuBMAP Donors — donors","text":"size integer(1) number maximum results return; default (10000) meant large enough return results. integer(1) number number results skip, defaulting 0. character(1) return format. One \"tibble\" (default), \"character\". uuid character(1) corresponding HuBMAP Donor UUID string. expected 32-digit hex number. entity_type character(1) selected derived entity type. One \"Sample\" \"Dataset\".","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/donors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HuBMAP Donors — donors","text":"*_columns() returns named list name containing column name used tibble returned samples(), datasets(),  donors(), collections(),  publications(). = \"tibble\",return value tibble paths elements abbreviations names.","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/donors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"HuBMAP Donors — donors","text":"Additional details provided HuBMAP consortium webpage, https://software.docs.hubmapconsortium.org/apis Additional details provided HuBMAP consortium webpage, https://software.docs.hubmapconsortium.org/apis Additional details provided HuBMAP consortium webpage, https://software.docs.hubmapconsortium.org/apis","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/donors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HuBMAP Donors — donors","text":"","code":"donors(size = 4) #> # A tibble: 4 × 7 #>   uuid             hubmap_id group_name Sex   Age   Race  last_modified_timest…¹ #>   <chr>            <chr>     <chr>      <chr> <chr> <chr> <chr>                  #> 1 c09f875545a6469… HBM534.P… TTD - Uni… Fema… 90    White 2024-04-03             #> 2 0abacde24438813… HBM358.K… TTD - Uni… Male  90    White 2024-04-03             #> 3 d7c90f1fe1ae702… HBM639.M… TTD - Uni… Fema… 59    White 2024-04-03             #> 4 b1acd1731563347… HBM674.F… TTD - Uni… Fema… 60    White 2024-04-03             #> # ℹ abbreviated name: ¹​last_modified_timestamp donors_default_columns() #> # A tibble: 8 × 1 #>   columns                 #>   <chr>                   #> 1 hubmap_id               #> 2 uuid                    #> 3 group_name              #> 4 Sex                     #> 5 Age                     #> 6 Body Mass Index         #> 7 Race                    #> 8 last_modified_timestamp  uuid <- \"1dcde05aea3509b2cf89a41ceb3d700f\" donor_detail(uuid) #> # A tibble: 1 × 24 #>   ancestor_ids ancestors  created_by_user_displayname created_by_user_email      #>   <list>       <list>     <chr>                       <chr>                      #> 1 <list [0]>   <list [0]> Jamie Allen                 jamie.l.allen@vanderbilt.… #> # ℹ 20 more variables: created_timestamp <dbl>, data_access_level <chr>, #> #   descendant_ids <list>, descendants <list>, description <chr>, #> #   display_subtype <chr>, entity_type <chr>, group_name <chr>, #> #   group_uuid <chr>, hubmap_id <chr>, immediate_ancestors <list>, #> #   immediate_descendants <list>, index_version <chr>, lab_donor_id <chr>, #> #   label <chr>, last_modified_timestamp <dbl>, metadata <list>, #> #   protocol_url <chr>, submission_id <chr>, uuid <chr> uuid <- \"1dcde05aea3509b2cf89a41ceb3d700f\" donor_derived(uuid, \"Sample\") #> # A tibble: 5 × 6 #>   uuid         hubmap_id group_name sample_category last_modified_timest…¹ organ #>   <chr>        <chr>     <chr>      <chr>           <chr>                  <chr> #> 1 146c221bca3… HBM847.D… Vanderbil… organ           2021-08-04             Kidn… #> 2 27485b21a22… HBM693.K… Vanderbil… block           2022-07-19             Kidn… #> 3 1441346ca08… HBM488.F… Vanderbil… section         2021-08-25             Kidn… #> 4 e97fd3e2b6d… HBM695.M… Vanderbil… section         2021-08-25             Kidn… #> 5 92cd878bf5b… HBM686.B… Vanderbil… section         2021-08-25             Kidn… #> # ℹ abbreviated name: ¹​last_modified_timestamp"},{"path":"https://christinehou11.github.io/HuBMAPR/reference/files.html","id":null,"dir":"Reference","previous_headings":"","what":"HuBMAP File Querying — files_globus_url","title":"HuBMAP File Querying — files_globus_url","text":"files_globus_url() takes unique dataset UUID publication UUID used query theHuBMAP API information available files.","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HuBMAP File Querying — files_globus_url","text":"","code":"files_globus_url(uuid)"},{"path":"https://christinehou11.github.io/HuBMAPR/reference/files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HuBMAP File Querying — files_globus_url","text":"uuid character(1) corresponding HuBMAP Dataset UUID string. expected 32-digit hex number. One unique Dataset UUID corresponds one specific URL Globus. Files corresponding unique Dataset UUID saved Globus HuBMAP Public Collection webpage.","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HuBMAP File Querying — files_globus_url","text":"file_globus_url() helps jump Globus Collection webpage Globus link available data files; otherwise, external links related instructions. offered ","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/files.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"HuBMAP File Querying — files_globus_url","text":"Additional details provided HuBMAP consortium webpage, https://software.docs.hubmapconsortium.org/apis","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HuBMAP File Querying — files_globus_url","text":"","code":"# Globus available uuid_globus <- \"015153e7afb510d8624ee9f5fcad121d\" uuid_sra_dbGaP <- \"5ba6a5b81e95c93c26a33980f6e957d7\" uuid_not_available <- \"0eb5e457b4855ce28531bc97147196b6\"  # files_globus_url(*_globus)"},{"path":"https://christinehou11.github.io/HuBMAPR/reference/organs.html","id":null,"dir":"Reference","previous_headings":"","what":"HuBMAP Organs — organ","title":"HuBMAP Organs — organ","text":"organ retrieves available organ categories abbreviations","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/organs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HuBMAP Organs — organ","text":"","code":"organ()"},{"path":"https://christinehou11.github.io/HuBMAPR/reference/organs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HuBMAP Organs — organ","text":"organ returns tibble available organs' abbreviations corresponding full name.","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/organs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HuBMAP Organs — organ","text":"","code":"organs <- organ()  organs |>     dplyr::select(\"name\") |>     dplyr::distinct() #> # A tibble: 37 × 1 #>    name                  #>    <chr>                 #>  1 Aorta                 #>  2 Blood                 #>  3 Bladder               #>  4 Bone Marrow           #>  5 Brain                 #>  6 Heart                 #>  7 Bronchus (Left)       #>  8 Eye (Left)            #>  9 Fallopian Tube (Left) #> 10 Large Intestine       #> # ℹ 27 more rows"},{"path":"https://christinehou11.github.io/HuBMAPR/reference/publication_information.html","id":null,"dir":"Reference","previous_headings":"","what":"Publication Information Summaries from Publication UUID — publication_information","title":"Publication Information Summaries from Publication UUID — publication_information","text":"publication_information() queries HuBMAP publication title, abstract, manuscript,corresponding authors, dataset types, organ. publication_information() organizes returned tibble publication_information() legible format.","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/publication_information.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Publication Information Summaries from Publication UUID — publication_information","text":"","code":"publication_information(uuid)  # S3 method for class 'publication_information' print(x, ...)"},{"path":"https://christinehou11.github.io/HuBMAPR/reference/publication_information.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Publication Information Summaries from Publication UUID — publication_information","text":"uuid character(1) corresponding HuBMAP Publication UUID string. expected 32-digit hex number. x object class publication_information, result call publication_information(). ... additional arguments, required conform print generic used.","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/publication_information.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Publication Information Summaries from Publication UUID — publication_information","text":"publication_information() returns tibble, columns containing information publication. tibble class publication_information printed character. print.publication_information() invoked automatically result publication_information() displayed side effect displaying object.","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/publication_information.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Publication Information Summaries from Publication UUID — publication_information","text":"","code":"uuid <- \"e8338966c69e759157d6c6ad24847989\" publication_information(uuid) #> Title #>  Organ Mapping Antibody Panels (OMAPs): A community resource for standardized multiplexed tissue imaging #> Abstract #>  Multiplexed antibody-based imaging enables the detailed characterization of molecular and cellular organization in tissues. Significant advances in the field now allow high-parameter data collection (60+targets); however, considerable expertise and capital are needed to construct the antibody panels employed by these methods. Organ Mapping Antibody Panels (OMAPs) are community-validated resources that save time and money, increase reproducibility, accelerate discovery and support the construction of a Human Reference Atlas. #> Manuscript #>  - Nature Methods: https://doi.org/10.1038/s41592-023-01846-7 #> Corresponding Authors #>  - Andrea J. Radtke 0000-0003-4379-8967 #> Data Types #>  - cell-dive #> Organs #>  - Skin"},{"path":"https://christinehou11.github.io/HuBMAPR/reference/publications.html","id":null,"dir":"Reference","previous_headings":"","what":"HuBMAP Samples — publications","title":"HuBMAP Samples — publications","text":"publications() returns details available samples, ordered last modified dates. publication_status == TRUE: peer reviewed publication; publication_status == FALSE: pre-print publication. *_columns() returns tibble named character vector describing content tibble returned samples(), datasets(), donors(), collections(), publications(). publication_data() takes unique publication_id returns details one specified publication. publication_authors() takes unique publication_id returns authors information one specified collection tibble","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/publications.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HuBMAP Samples — publications","text":"","code":"publications(size = 10000L, from = 0L)  publications_default_columns(as = c(\"tibble\", \"character\"))  publication_data(uuid, entity_type = c(\"Dataset\", \"Sample\", \"Donor\"))  publication_authors(uuid)"},{"path":"https://christinehou11.github.io/HuBMAPR/reference/publications.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HuBMAP Samples — publications","text":"size integer(1) number maximum results return; default (10000) meant large enough return results. integer(1) number number results skip, defaulting 0. character(1) return format. One \"tibble\" (default), \"character\". uuid character(1) corresponding HuBMAP Publication UUID string. expected 32-digit hex number. entity_type character(1) selected derived entity type. One \"Sample\", \"Donor\" \"Dataset\".","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/publications.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HuBMAP Samples — publications","text":"*_columns() returns named list name containing column name used tibble returned samples(), datasets(),  donors(), collections(),  publications(). = \"tibble\",return value tibble paths elements abbreviations names.","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/publications.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"HuBMAP Samples — publications","text":"Additional details provided HuBMAP consortium webpage, https://software.docs.hubmapconsortium.org/apis Additional details provided HuBMAP consortium webpage, https://software.docs.hubmapconsortium.org/apis Additional details provided HuBMAP consortium webpage, https://software.docs.hubmapconsortium.org/apis","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/publications.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HuBMAP Samples — publications","text":"","code":"publications(size = 3, from = 2) #> # A tibble: 3 × 7 #>   uuid      hubmap_id last_modified_timest…¹ publication_date publication_status #>   <chr>     <chr>     <chr>                  <chr>            <chr>              #> 1 2ced91fd… HBM885.X… 2023-07-18             2021-10-18       FALSE              #> 2 e8338966… HBM695.W… 2023-07-18             2023-07-19       TRUE               #> 3 dd0e7aea… HBM599.D… 2023-07-18             2023-07-19       TRUE               #> # ℹ abbreviated name: ¹​last_modified_timestamp #> # ℹ 2 more variables: publication_venue <chr>, title <chr> publications_default_columns() #> # A tibble: 7 × 1 #>   columns                 #>   <chr>                   #> 1 uuid                    #> 2 hubmap_id               #> 3 title                   #> 4 publication_venue       #> 5 last_modified_timestamp #> 6 publication_date        #> 7 publication_status       uuid <- \"3c7273660cdf9ab91a7901533b2cd9a5\" publication_data(uuid) #> # A tibble: 1 × 7 #>   uuid     hubmap_id data_types dataset_type status last_modified_timest…¹ organ #>   <chr>    <chr>     <chr>      <chr>        <chr>  <chr>                  <chr> #> 1 00d9d4b… HBM342.M… SNARE-RNA… RNAseq       Publi… 2022-05-11             Kidn… #> # ℹ abbreviated name: ¹​last_modified_timestamp  uuid <- \"3c7273660cdf9ab91a7901533b2cd9a5\" publication_authors(uuid) #> # A tibble: 50 × 8 #>    affiliation      first_name is_contact last_name middle_name_or_initial name  #>    <chr>            <chr>      <chr>      <chr>     <chr>                  <chr> #>  1 Department of B… Blue       FALSE      Lake      \"B.\"                   Blue… #>  2 Department of C… Rajasree   FALSE      Menon     \"\"                     Raja… #>  3 Department of P… Seth       FALSE      Winfree   \"\"                     Seth… #>  4 Department of B… Qiwen      FALSE      Hu        \"\"                     Qiwe… #>  5 Department of M… Ricardo    FALSE      Melo Fer… \"\"                     Rica… #>  6 Department of B… Kian       FALSE      Kalhor    \"\"                     Kian… #>  7 Department of M… Daria      FALSE      Barwinska \"\"                     Dari… #>  8 Department of I… Edgar      FALSE      Otto      \"A.\"                   Edga… #>  9 Department of M… Michael    FALSE      Ferkowicz \"\"                     Mich… #> 10 Department of B… Dinh       FALSE      Diep      \"\"                     Dinh… #> # ℹ 40 more rows #> # ℹ 2 more variables: orcid_id <chr>, version <chr>"},{"path":"https://christinehou11.github.io/HuBMAPR/reference/samples.html","id":null,"dir":"Reference","previous_headings":"","what":"HuBMAP Samples — samples","title":"HuBMAP Samples — samples","text":"samples() returns details available samples, ordered last modified dates *_columns() returns tibble named character vector describing content tibble returned samples(), datasets(),  donors(), collections(), publications(). sample_detail() takes unique sample_id returns details one specified sample tibble sample_derived() takes unique sample_id returns derived dataset /sample details.","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HuBMAP Samples — samples","text":"","code":"samples(size = 10000L, from = 0L)  samples_default_columns(as = c(\"tibble\", \"character\"))  sample_detail(uuid)  sample_derived(uuid, entity_type = c(\"Dataset\", \"Sample\"))"},{"path":"https://christinehou11.github.io/HuBMAPR/reference/samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HuBMAP Samples — samples","text":"size integer(1) number maximum results return; default (10000) meant large enough return results. integer(1) number number results skip, defaulting 0. character(1) return format. One \"tibble\" (default), \"character\". uuid character(1) corresponding HuBMAP Sample UUID string. expected 32-digit hex number. entity_type character(1) selected derived entity type. One \"Sample\" \"Dataset\".","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HuBMAP Samples — samples","text":"*_columns() returns named list name containing column name used tibble returned samples(), datasets(),  donors(), collections(),  publications(). = \"tibble\",return value tibble paths elements abbreviations names.","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/samples.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"HuBMAP Samples — samples","text":"Additional details provided HuBMAP consortium webpage, https://software.docs.hubmapconsortium.org/apis Additional details provided HuBMAP consortium webpage, https://software.docs.hubmapconsortium.org/apis Additional details provided HuBMAP consortium webpage, https://software.docs.hubmapconsortium.org/apis","code":""},{"path":"https://christinehou11.github.io/HuBMAPR/reference/samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HuBMAP Samples — samples","text":"","code":"samples(size = 20, from = 5) #> # A tibble: 20 × 7 #>    uuid              hubmap_id donor.hubmap_id group_name last_modified_timest…¹ #>    <chr>             <chr>     <chr>           <chr>      <chr>                  #>  1 1cfe67afe97094ac… HBM355.M… HBM279.WPZP.978 Stanford … 2024-07-19             #>  2 23820292ab47f319… HBM236.X… HBM279.WPZP.978 Stanford … 2024-07-19             #>  3 038e4fcefc00f7ec… HBM595.S… HBM279.WPZP.978 Stanford … 2024-07-19             #>  4 e3b74d607c3b20c9… HBM876.S… HBM477.DBJN.952 Universit… 2024-05-29             #>  5 744f20be06ec72b7… HBM796.X… HBM375.PJSC.682 Universit… 2024-05-29             #>  6 e4ffe5a1de1e63b3… HBM867.F… HBM568.HLJW.252 Universit… 2024-05-29             #>  7 681f7f1d0a87427c… HBM788.K… HBM984.MHHN.738 Universit… 2024-05-29             #>  8 a6acb120173be820… HBM786.T… HBM662.VVHK.499 Universit… 2024-05-29             #>  9 0ec930e0f4a8fcf1… HBM752.D… HBM994.SGLP.263 Universit… 2024-05-29             #> 10 acb712bf26d8fe7d… HBM748.G… HBM735.QDFT.264 Universit… 2024-05-29             #> 11 c18dbe465fe2dfdd… HBM735.Q… HBM894.PKMC.242 Universit… 2024-05-29             #> 12 5abbecf8d13b9df7… HBM562.L… HBM256.BRQS.425 Universit… 2024-05-29             #> 13 8d7ce3aab7013e41… HBM556.C… HBM867.BLQJ.787 Universit… 2024-05-29             #> 14 c4200fa2bd88eca8… HBM486.Q… HBM984.MHHN.738 Universit… 2024-05-29             #> 15 c15e6342d6905d6d… HBM548.T… HBM579.CTRK.363 Universit… 2024-05-29             #> 16 d9e64e77d26d9fb8… HBM455.P… HBM377.WFTZ.879 Universit… 2024-05-29             #> 17 2e398e91f1336b67… HBM387.K… HBM386.FNTC.294 Universit… 2024-05-29             #> 18 8cfd588e5bc4a31e… HBM865.P… HBM892.LCXT.493 General E… 2024-05-29             #> 19 f187ff9a4631540a… HBM297.V… HBM372.JZTV.423 General E… 2024-05-29             #> 20 c6f7a9e8189e2111… HBM393.S… HBM593.NGPZ.869 TTD - Uni… 2024-05-14             #> # ℹ abbreviated name: ¹​last_modified_timestamp #> # ℹ 2 more variables: sample_category <chr>, organ <chr> samples_default_columns() #> # A tibble: 7 × 1 #>   columns                 #>   <chr>                   #> 1 uuid                    #> 2 hubmap_id               #> 3 group_name              #> 4 sample_category         #> 5 organ                   #> 6 last_modified_timestamp #> 7 donor.hubmap_id          uuid <- \"d3525d35f6d5ee3dc3186613b0ab1762\" sample_detail(uuid) #> # A tibble: 1 × 25 #>   ancestor_ids ancestors  created_by_user_displayname created_by_user_email #>   <list>       <list>     <chr>                       <chr>                 #> 1 <chr [3]>    <list [3]> Marda Jorgensen             marda@ufl.edu         #> # ℹ 21 more variables: created_timestamp <dbl>, data_access_level <chr>, #> #   descendant_ids <list>, descendants <list>, display_subtype <chr>, #> #   donor <list>, entity_type <chr>, group_name <chr>, group_uuid <chr>, #> #   hubmap_id <chr>, immediate_ancestors <list>, immediate_descendants <list>, #> #   index_version <chr>, lab_tissue_sample_id <chr>, #> #   last_modified_timestamp <dbl>, origin_samples <list>, protocol_url <chr>, #> #   rui_location <chr>, sample_category <chr>, submission_id <chr>, … uuid <- \"3e7dc14313262af577f686dcb09f5119\" sample_derived(uuid, \"Sample\") #> # A tibble: 1 × 6 #>   uuid         hubmap_id group_name sample_category last_modified_timest…¹ organ #>   <chr>        <chr>     <chr>      <chr>           <chr>                  <chr> #> 1 63ef1040ae3… HBM976.W… TTD - Uni… section         2024-04-09             Brain #> # ℹ abbreviated name: ¹​last_modified_timestamp"},{"path":[]}]
